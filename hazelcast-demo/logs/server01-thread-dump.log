Use VisualVM to connect to remote JXM and trigger threaddump


2020-07-01 18:43:28
Full thread dump OpenJDK 64-Bit Server VM (11.0.5+10-alpine-r0 mixed mode):

"Reference Handler" - Thread t@2
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/java.lang.ref.Reference.waitForReferencePendingList(Native Method)
        at java.base@11.0.5/java.lang.ref.Reference.processPendingReferences(Reference.java:241)
        at java.base@11.0.5/java.lang.ref.Reference$ReferenceHandler.run(Reference.java:213)

   Locked ownable synchronizers:
        - None

"Finalizer" - Thread t@3
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/java.lang.Object.wait(Native Method)
        - waiting on <5d20e51c> (a java.lang.ref.ReferenceQueue$Lock)
        at java.base@11.0.5/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
        at java.base@11.0.5/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:176)
        at java.base@11.0.5/java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:170)

   Locked ownable synchronizers:
        - None

"Signal Dispatcher" - Thread t@4
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
        - None

"Common-Cleaner" - Thread t@10
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/java.lang.Object.wait(Native Method)
        - waiting on <259929f5> (a java.lang.ref.ReferenceQueue$Lock)
        at java.base@11.0.5/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
        at java.base@11.0.5/jdk.internal.ref.CleanerImpl.run(CleanerImpl.java:148)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)
        at java.base@11.0.5/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:134)

   Locked ownable synchronizers:
        - None

"server-timer" - Thread t@12
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/java.lang.Object.wait(Native Method)
        - waiting on <6234ddc0> (a java.util.TaskQueue)
        at java.base@11.0.5/java.util.TimerThread.mainLoop(Timer.java:553)
        at java.base@11.0.5/java.util.TimerThread.run(Timer.java:506)

   Locked ownable synchronizers:
        - None

"HTTP-Dispatcher" - Thread t@14
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/sun.nio.ch.EPoll.wait(Native Method)
        at java.base@11.0.5/sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:120)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:124)
        - locked <100d6dbb> (a sun.nio.ch.Util$2)
        - locked <5b2a907a> (a sun.nio.ch.EPollSelectorImpl)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:136)
        at platform/jdk.httpserver@11.0.5/sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:365)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - None

"RMI TCP Accept-0" - Thread t@16
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.base@11.0.5/java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:458)
        at java.base@11.0.5/java.net.ServerSocket.implAccept(ServerSocket.java:565)
        at java.base@11.0.5/java.net.ServerSocket.accept(ServerSocket.java:533)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:394)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:366)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - None

"RMI TCP Accept-9999" - Thread t@17
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.base@11.0.5/java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:458)
        at java.base@11.0.5/java.net.ServerSocket.implAccept(ServerSocket.java:565)
        at java.base@11.0.5/java.net.ServerSocket.accept(ServerSocket.java:533)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:394)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:366)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - None

"RMI TCP Accept-0" - Thread t@18
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.base@11.0.5/java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:458)
        at java.base@11.0.5/java.net.ServerSocket.implAccept(ServerSocket.java:565)
        at java.base@11.0.5/java.net.ServerSocket.accept(ServerSocket.java:533)
        at jdk.management.agent@11.0.5/sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:52)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:394)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:366)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.scheduled.thread-" - Thread t@20
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <6b7d5b3c> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
        at java.base@11.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
        at java.base@11.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.event-1" - Thread t@37
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <312f4b4a> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
        at java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
        at app//com.hazelcast.internal.util.executor.StripedExecutor$Worker.run(StripedExecutor.java:227)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.event-2" - Thread t@38
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <5d950a1b> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
        at java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
        at app//com.hazelcast.internal.util.executor.StripedExecutor$Worker.run(StripedExecutor.java:227)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.event-3" - Thread t@39
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <190b16b4> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
        at java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
        at app//com.hazelcast.internal.util.executor.StripedExecutor$Worker.run(StripedExecutor.java:227)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.event-4" - Thread t@40
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <18ae1a12> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
        at java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
        at app//com.hazelcast.internal.util.executor.StripedExecutor$Worker.run(StripedExecutor.java:227)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.event-5" - Thread t@41
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <53106756> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
        at java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
        at app//com.hazelcast.internal.util.executor.StripedExecutor$Worker.run(StripedExecutor.java:227)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.operation-parker" - Thread t@42
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <26a07afd> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
        at java.base@11.0.5/java.util.concurrent.DelayQueue.poll(DelayQueue.java:265)
        at app//com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl$ExpirationTask.doRun(OperationParkerImpl.java:228)
        at app//com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl$ExpirationTask.run(OperationParkerImpl.java:211)
        at java.base@11.0.5/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
        at java.base@11.0.5/java.util.concurrent.FutureTask.run(FutureTask.java:264)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)

   Locked ownable synchronizers:
        - locked <71f67a79> (a java.util.concurrent.ThreadPoolExecutor$Worker)

"hz.musing_kilby.MetricsRegistry.thread-1" - Thread t@45
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <67df762b> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
        at java.base@11.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
        at java.base@11.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.MetricsRegistry.thread-2" - Thread t@46
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <67df762b> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
        at java.base@11.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
        at java.base@11.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.migration" - Thread t@44
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/java.lang.Thread.sleep(Native Method)
        at app//com.hazelcast.internal.partition.impl.MigrationThread.doRun(MigrationThread.java:109)
        at app//com.hazelcast.internal.partition.impl.MigrationThread.run(MigrationThread.java:67)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.cached.thread-1" - Thread t@47
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <f499e48> (a java.util.concurrent.SynchronousQueue$TransferStack)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:462)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:361)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:937)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.InvocationMonitorThread" - Thread t@48
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <5fb36220> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
        at java.base@11.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
        at java.base@11.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.partition-operation.thread-0" - Thread t@23
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:323)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.takeAll(MPSCQueue.java:229)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.take(MPSCQueue.java:151)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.partition-operation.thread-1" - Thread t@24
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:323)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.takeAll(MPSCQueue.java:229)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.take(MPSCQueue.java:151)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.partition-operation.thread-2" - Thread t@25
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:323)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.takeAll(MPSCQueue.java:229)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.take(MPSCQueue.java:151)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.partition-operation.thread-3" - Thread t@26
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:323)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.takeAll(MPSCQueue.java:229)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.take(MPSCQueue.java:151)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.partition-operation.thread-4" - Thread t@27
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:323)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.takeAll(MPSCQueue.java:229)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.take(MPSCQueue.java:151)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.partition-operation.thread-5" - Thread t@28
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:323)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.takeAll(MPSCQueue.java:229)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.take(MPSCQueue.java:151)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.partition-operation.thread-6" - Thread t@29
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:323)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.takeAll(MPSCQueue.java:229)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.take(MPSCQueue.java:151)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.partition-operation.thread-7" - Thread t@30
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:323)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.takeAll(MPSCQueue.java:229)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.take(MPSCQueue.java:151)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.priority-generic-operation.thread-0" - Thread t@31
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <7ae19cb9> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
        at java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:76)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.generic-operation.thread-0" - Thread t@32
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <6693c3e0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
        at java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.generic-operation.thread-1" - Thread t@33
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <6693c3e0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
        at java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.generic-operation.thread-2" - Thread t@34
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <6693c3e0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
        at java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.generic-operation.thread-3" - Thread t@35
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <6693c3e0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081)
        at java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationQueueImpl.take(OperationQueueImpl.java:85)
        at app//com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:118)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.response-0" - Thread t@21
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:323)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.takeAll(MPSCQueue.java:229)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.take(MPSCQueue.java:151)
        at app//com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier$ResponseThread.doRun(InboundResponseHandlerSupplier.java:286)
        at app//com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier$ResponseThread.run(InboundResponseHandlerSupplier.java:275)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.response-1" - Thread t@22
   java.lang.Thread.State: WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.park(LockSupport.java:323)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.takeAll(MPSCQueue.java:229)
        at app//com.hazelcast.internal.util.concurrent.MPSCQueue.take(MPSCQueue.java:151)
        at app//com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier$ResponseThread.doRun(InboundResponseHandlerSupplier.java:286)
        at app//com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier$ResponseThread.run(InboundResponseHandlerSupplier.java:275)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.SlowOperationDetectorThread" - Thread t@36
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/java.lang.Thread.sleep(Native Method)
        at java.base@11.0.5/java.lang.Thread.sleep(Thread.java:339)
        at java.base@11.0.5/java.util.concurrent.TimeUnit.sleep(TimeUnit.java:446)
        at app//com.hazelcast.spi.impl.operationexecutor.slowoperationdetector.SlowOperationDetector$DetectorThread.sleepInterval(SlowOperationDetector.java:289)
        at app//com.hazelcast.spi.impl.operationexecutor.slowoperationdetector.SlowOperationDetector$DetectorThread.run(SlowOperationDetector.java:154)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.cached.thread-2" - Thread t@49
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <f499e48> (a java.util.concurrent.SynchronousQueue$TransferStack)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:462)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:361)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:937)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.cached.thread-3" - Thread t@50
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <f499e48> (a java.util.concurrent.SynchronousQueue$TransferStack)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:462)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:361)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:937)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.IO.thread-in-0" - Thread t@51
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/sun.nio.ch.EPoll.wait(Native Method)
        at java.base@11.0.5/sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:120)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:124)
        - locked <64140eff> (a com.hazelcast.internal.networking.nio.SelectorOptimizer$SelectionKeysSet)
        - locked <4e3a156> (a sun.nio.ch.EPollSelectorImpl)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:136)
        at app//com.hazelcast.internal.networking.nio.NioThread.selectLoop(NioThread.java:291)
        at app//com.hazelcast.internal.networking.nio.NioThread.run(NioThread.java:248)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.IO.thread-in-1" - Thread t@52
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/sun.nio.ch.EPoll.wait(Native Method)
        at java.base@11.0.5/sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:120)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:124)
        - locked <7f7874c4> (a com.hazelcast.internal.networking.nio.SelectorOptimizer$SelectionKeysSet)
        - locked <70de8211> (a sun.nio.ch.EPollSelectorImpl)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:136)
        at app//com.hazelcast.internal.networking.nio.NioThread.selectLoop(NioThread.java:291)
        at app//com.hazelcast.internal.networking.nio.NioThread.run(NioThread.java:248)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.IO.thread-in-2" - Thread t@53
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/sun.nio.ch.EPoll.wait(Native Method)
        at java.base@11.0.5/sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:120)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:124)
        - locked <34790903> (a com.hazelcast.internal.networking.nio.SelectorOptimizer$SelectionKeysSet)
        - locked <2d89f7cb> (a sun.nio.ch.EPollSelectorImpl)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:136)
        at app//com.hazelcast.internal.networking.nio.NioThread.selectLoop(NioThread.java:291)
        at app//com.hazelcast.internal.networking.nio.NioThread.run(NioThread.java:248)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.IO.thread-out-0" - Thread t@54
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/sun.nio.ch.EPoll.wait(Native Method)
        at java.base@11.0.5/sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:120)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:124)
        - locked <116b78ea> (a com.hazelcast.internal.networking.nio.SelectorOptimizer$SelectionKeysSet)
        - locked <15a1bedc> (a sun.nio.ch.EPollSelectorImpl)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:136)
        at app//com.hazelcast.internal.networking.nio.NioThread.selectLoop(NioThread.java:291)
        at app//com.hazelcast.internal.networking.nio.NioThread.run(NioThread.java:248)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.IO.thread-out-1" - Thread t@55
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/sun.nio.ch.EPoll.wait(Native Method)
        at java.base@11.0.5/sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:120)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:124)
        - locked <696c9c7a> (a com.hazelcast.internal.networking.nio.SelectorOptimizer$SelectionKeysSet)
        - locked <b391933> (a sun.nio.ch.EPollSelectorImpl)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:136)
        at app//com.hazelcast.internal.networking.nio.NioThread.selectLoop(NioThread.java:291)
        at app//com.hazelcast.internal.networking.nio.NioThread.run(NioThread.java:248)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.IO.thread-out-2" - Thread t@56
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/sun.nio.ch.EPoll.wait(Native Method)
        at java.base@11.0.5/sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:120)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:124)
        - locked <41df8c96> (a com.hazelcast.internal.networking.nio.SelectorOptimizer$SelectionKeysSet)
        - locked <59909d2f> (a sun.nio.ch.EPollSelectorImpl)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:136)
        at app//com.hazelcast.internal.networking.nio.NioThread.selectLoop(NioThread.java:291)
        at app//com.hazelcast.internal.networking.nio.NioThread.run(NioThread.java:248)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.IO.BalancerThread" - Thread t@57
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <256bbaa4> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
        at java.base@11.0.5/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:458)
        at app//com.hazelcast.internal.networking.nio.iobalancer.IOBalancerThread.run(IOBalancerThread.java:65)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.IO.thread-Acceptor" - Thread t@58
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/sun.nio.ch.EPoll.wait(Native Method)
        at java.base@11.0.5/sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:120)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:124)
        - locked <5492452b> (a sun.nio.ch.Util$2)
        - locked <17213e0b> (a sun.nio.ch.EPollSelectorImpl)
        at java.base@11.0.5/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:141)
        at app//com.hazelcast.internal.nio.tcp.TcpIpAcceptor$AcceptorIOThread.acceptLoop(TcpIpAcceptor.java:185)
        at app//com.hazelcast.internal.nio.tcp.TcpIpAcceptor$AcceptorIOThread.run(TcpIpAcceptor.java:171)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.MulticastThread" - Thread t@59
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/java.net.PlainDatagramSocketImpl.receive0(Native Method)
        - locked <2aa7bb45> (a java.net.PlainDatagramSocketImpl)
        at java.base@11.0.5/java.net.AbstractPlainDatagramSocketImpl.receive(AbstractPlainDatagramSocketImpl.java:181)
        - locked <2aa7bb45> (a java.net.PlainDatagramSocketImpl)
        at java.base@11.0.5/java.net.DatagramSocket.receive(DatagramSocket.java:814)
        - locked <778322db> (a java.net.DatagramPacket)
        - locked <31fe8a1d> (a java.net.MulticastSocket)
        at app//com.hazelcast.internal.cluster.impl.MulticastService.receive(MulticastService.java:223)
        at app//com.hazelcast.internal.cluster.impl.MulticastService.run(MulticastService.java:199)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.HealthMonitor" - Thread t@43
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/java.lang.Thread.sleep(Native Method)
        at java.base@11.0.5/java.lang.Thread.sleep(Thread.java:339)
        at java.base@11.0.5/java.util.concurrent.TimeUnit.sleep(TimeUnit.java:446)
        at app//com.hazelcast.internal.diagnostics.HealthMonitor$HealthMonitorThread.run(HealthMonitor.java:163)

   Locked ownable synchronizers:
        - None

"DestroyJavaVM" - Thread t@60
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
        - None

"hz.musing_kilby.cached.thread-4" - Thread t@62
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <f499e48> (a java.util.concurrent.SynchronousQueue$TransferStack)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:462)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:361)
        at java.base@11.0.5/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:937)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)
        at app//com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)

   Locked ownable synchronizers:
        - None

"RMI TCP Connection(1)-x.x.x.x" - Thread t@63
   java.lang.Thread.State: RUNNABLE
        at java.base@11.0.5/java.net.SocketInputStream.socketRead0(Native Method)
        at java.base@11.0.5/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
        at java.base@11.0.5/java.net.SocketInputStream.read(SocketInputStream.java:168)
        at java.base@11.0.5/java.net.SocketInputStream.read(SocketInputStream.java:140)
        at java.base@11.0.5/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
        at java.base@11.0.5/java.io.BufferedInputStream.read(BufferedInputStream.java:271)
        - locked <2f312b4f> (a java.io.BufferedInputStream)
        at java.base@11.0.5/java.io.FilterInputStream.read(FilterInputStream.java:83)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:544)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:796)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:677)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1129/0x00000001004c3040.run(Unknown Source)
        at java.base@11.0.5/java.security.AccessController.doPrivileged(Native Method)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:676)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - locked <609d24e9> (a java.util.concurrent.ThreadPoolExecutor$Worker)

"RMI Scheduler(0)" - Thread t@64
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/jdk.internal.misc.Unsafe.park(Native Method)
        - parking to wait for <618d6e4b> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.base@11.0.5/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
        at java.base@11.0.5/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
        at java.base@11.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
        at java.base@11.0.5/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - None

"RMI TCP Connection(3)-192.168.144.1" - Thread t@65
   java.lang.Thread.State: RUNNABLE
        at java.management@11.0.5/sun.management.ThreadImpl.dumpThreads0(Native Method)
        at java.management@11.0.5/sun.management.ThreadImpl.dumpAllThreads(ThreadImpl.java:502)
        at java.management@11.0.5/sun.management.ThreadImpl.dumpAllThreads(ThreadImpl.java:490)
        at java.base@11.0.5/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at java.base@11.0.5/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at java.base@11.0.5/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base@11.0.5/java.lang.reflect.Method.invoke(Method.java:566)
        at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
        at jdk.internal.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
        at java.base@11.0.5/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base@11.0.5/java.lang.reflect.Method.invoke(Method.java:566)
        at java.base@11.0.5/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:260)
        at java.management@11.0.5/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
        at java.management@11.0.5/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
        at java.management@11.0.5/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
        at java.management@11.0.5/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
        at java.management@11.0.5/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
        at java.management@11.0.5/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
        at java.management@11.0.5/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
        at java.management@11.0.5/javax.management.StandardMBean.invoke(StandardMBean.java:405)
        at java.management@11.0.5/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:809)
        at java.management@11.0.5/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
        at java.management.rmi@11.0.5/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1466)
        at java.management.rmi@11.0.5/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1307)
        at java.management.rmi@11.0.5/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1399)
        at java.management.rmi@11.0.5/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:827)
        at java.base@11.0.5/jdk.internal.reflect.GeneratedMethodAccessor118.invoke(Unknown Source)
        at java.base@11.0.5/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base@11.0.5/java.lang.reflect.Method.invoke(Method.java:566)
        at java.rmi@11.0.5/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:359)
        at java.rmi@11.0.5/sun.rmi.transport.Transport$1.run(Transport.java:200)
        at java.rmi@11.0.5/sun.rmi.transport.Transport$1.run(Transport.java:197)
        at java.base@11.0.5/java.security.AccessController.doPrivileged(Native Method)
        at java.rmi@11.0.5/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:562)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:796)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:677)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1129/0x00000001004c3040.run(Unknown Source)
        at java.base@11.0.5/java.security.AccessController.doPrivileged(Native Method)
        at java.rmi@11.0.5/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:676)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
        at java.base@11.0.5/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - locked <3d27507f> (a java.util.concurrent.ThreadPoolExecutor$Worker)

"JMX server connection timeout 66" - Thread t@66
   java.lang.Thread.State: TIMED_WAITING
        at java.base@11.0.5/java.lang.Object.wait(Native Method)
        - waiting on <177f2297> (a [I)
        at java.management@11.0.5/com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:171)
        at java.base@11.0.5/java.lang.Thread.run(Thread.java:834)

   Locked ownable synchronizers:
        - None

